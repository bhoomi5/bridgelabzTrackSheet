# version: "3.2"

# services:

#   api:
#     build:
#       context: .
#     image: user
#     container_name: user-api
#     env_file: docker-compose.env
#     environment:
#       SERVICES: api
#       PORT: 4000
#     depends_on:
#       - nats
#       - redis
#       - mongo
#     labels:
#       - "traefik.enable=true"
#       - "traefik.backend=api"
#       - "traefik.port=4000"
#       - "traefik.frontend.entryPoints=http"
#       - "traefik.frontend.rule=PathPrefix:/"
#     networks:
#       - internal

#   greeter:
#     build:
#       context: .
#     image: user
#     container_name: user-greeter
#     env_file: docker-compose.env
#     environment:
#       SERVICES: greeter
#     labels:
#       - "traefik.enable=false"
#     depends_on:
#       - nats
#       - redis
#     networks:
#       - internal

#   user:
#     build:
#       context: .
#     image: user
#     container_name: user-user
#     env_file: docker-compose.env
#     environment:
#       SERVICES: user
#     labels:
#       - "traefik.enable=false"
#     depends_on:
#       - nats
#       - redis
#       - mongo
#     networks:
#       - internal

  

#   nats:
#     image: nats
#     labels:
#       - "traefik.enable=false"
#     networks:
#       - internal

#   redis:
#     image: redis:alpine
#     labels:
#       - "traefik.enable=false"
#     networks:
#       - internal
  
#   mongo:
#     image: mongo
#     labels:
#       - "traefik.enable=false"
#     networks:
#       - internal

#   traefik:
#     image: traefik:1.7
#     container_name: traefik
#     command:
#       - "--api"
#       - "--docker"
#       - "--docker.watch"
#     labels:
#       - "traefik.enable=true"
#       - "traefik.backend=traefik"
#       - "traefik.port=8080"
#     ports:
#       - 4000:80
#       - 4003:8080
#     volumes:
#       - /var/run/docker.sock:/var/run/docker.sock
#       - /dev/null:/traefik.toml
#     networks:
#       - internal
#       - default

# networks:
#   internal:
